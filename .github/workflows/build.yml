name: Build and Test Package
on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*" # Run the workflow for all pull requests
  release:
    types:
      - published # Run the workflow when a new GitHub release is published

env:
  NuGetDirectory: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Get all history to allow automatic versioning using MinVer

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3

      - name: Restore Dependencies
        run: dotnet restore Cosmos.Entity.Mapper.sln

      - name: Build Solution
        run: dotnet build Cosmos.Entity.Mapper.sln --no-restore

      - name: Run Tests
        run: dotnet test Cosmos.Entity.Mapper.sln --configuration Release --no-restore --verbosity normal --logger trx --results-directory test-output

      - name: Pack Nuget Package
        run: dotnet pack Cosmos.Entity.Mapper.sln --configuration Release  --output ${{ env.NuGetDirectory }}

      - name: Upload Package
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

  release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3

      - name: Deploy to NuGet
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.COSMOS_ENTITY_MAPPER_SECRET }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
